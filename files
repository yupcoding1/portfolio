// app/page.tsx
import { motion } from "framer-motion";
import { useRef } from "react";
import { Button } from "@/components/ui/button";
import { Hero } from "@/components/sections/hero";
import { Experience } from "@/components/sections/experience";
import { Projects } from "@/components/sections/projects";
import { Skills } from "@/components/sections/skills";

export default function Page() {
  const ref = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({ target: ref, offset: ["start end", "end start"] });
  const scaleX = useTransform(scrollYProgress, [0, 1], [0, 1]);

  return (
    <div ref={ref} className="relative">
      {/* Scroll progress bar */}
      <motion.div
        style={{ scaleX }}
        className="fixed left-0 right-0 top-0 z-50 h-1 origin-left bg-gradient-to-r from-[#0f9ba8] to-[#2e8b57]"
        aria-hidden="true"
      />

      {/* Decorative blobs */}
      <div aria-hidden="true">
        <div className="pointer-events-none fixed left-[-10%] top-[-10%] z-0 h-[50vh] w-[40vw] rounded-full bg-[#0f9ba8]/25 blur-3xl" />
        <div className="pointer-events-none fixed bottom-[-10%] right-[-10%] z-0 h-[55vh] w-[45vw] rounded-full bg-[#2e8b57]/25 blur-3xl" />
      </div>

      {/* Hero section */}
      <Hero />

      {/* Experience section */}
      <Experience />

      {/* Projects section */}
      <Projects />

      {/* Skills section */}
      <Skills />

      {/* Contact button */}
      <Button asChild size="sm" className="bg-[#0f9ba8] hover:bg-[#0d8a96]">
        <a href="mailto:mdhuzefabbasi@gmail.com" aria-label="Email me">
          {"Contact"}
        </a>
      </Button>
    </div>
  );
}

// components/sections/hero.tsx
export function Hero() {
  'use client';

  import { motion, useScroll, useTransform } from "framer-motion";
  import { useRef } from "react";
  import { Button } from "@/components/ui/button";
  import { Badge } from "@/components/ui/badge";
  import { ArrowRight, Github, Linkedin, Mail } from 'lucide-react';

  const techBadges = [
    "RAG Systems",
    "Vision Transformers",
    "PyTorch",
    "TensorFlow",
    "Transformers",
    "OpenCV",
    "LangChain",
    "Groq",
    "FastAPI",
    "PostgreSQL",
    "React",
    "Next.js",
    "Node.js",
    "Tailwind CSS",
    "Docker",
    "AWS",
  ];

  function Marquee() {
    // Duplicate list for seamless loop
    const items = [...techBadges, ...techBadges];
    return (
      <div className="relative overflow-hidden rounded-xl border border-slate-200 bg-white">
        <motion.div
          className="flex gap-3 whitespace-nowrap p-3"
          initial={{ x: 0 }}
          animate={{ x: "-50%" }}
          transition={{ ease: "linear", duration: 20, repeat: Infinity }}
        >
          {items.map((t, i) => (
            <span
              key={t + i}
              className="inline-flex items-center rounded-full bg-[#0f9ba8]/10 px-3 py-1 text-xs font-medium text-[#0f9ba8] ring-1 ring-[#0f9ba8]/20"
            >
              {t}
            </span>
          ))}
        </motion.div>
        {/* subtle top/bottom fades */}
        <div className="pointer-events-none absolute inset-y-0 left-0 w-12 bg-gradient-to-r from-white to-transparent" aria-hidden="true" />
        <div className="pointer-events-none absolute inset-y-0 right-0 w-12 bg-gradient-to-l from-white to-transparent" aria-hidden="true" />
      </div>
    );
  }

  const ref = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({ target: ref, offset: ["start end", "end start"] });
  const y = useTransform(scrollYProgress, [0, 1], [0, -40]);
  const opacity = useTransform(scrollYProgress, [0, 1], [1, 0.9]);

  return (
    <div ref={ref} className="relative">
      {/* Parallax decorative orb retinted */}
      <motion.div
        aria-hidden="true"
        className="absolute -left-12 top-[-60px] h-40 w-40 rounded-full bg-[#2e8b57]/35 blur-2xl md:h-56 md:w-56"
        style={{ y, opacity }}
      />
      <div className="mx-auto flex max-w-6xl flex-col items-start gap-6 px-4 py-16 md:px-6 md:py-28">
        <Badge className="bg-[#2e8b57]/10 text-[#2e8b57] ring-1 ring-[#2e8b57]/20 hover:bg-[#2e8b57]/15">
          {"AI/ML • Full-Stack • RAG"}
        </Badge>

        <motion.h1
          className="text-4xl font-bold tracking-tight sm:text-5xl md:text-6xl"
          initial={{ opacity: 0, y: 12 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          {"Mohammed Huzefa Abbasi"}
        </motion.h1>

        <motion.p
          className="max-w-2xl text-base text-slate-600 sm:text-lg"
          initial={{ opacity: 0, y: 12 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.05 }}
        >
          {"ML Engineer and Full-Stack Developer specializing in RAG pipelines, Vision Transformers, and performant web apps. GPA 9.25 • Winner BMC AI Hackathon 2025 • Top 150 Amazon AI Challenge 2024."}
        </motion.p>

        <div className="flex flex-wrap items-center gap-3">
          <Button asChild className="bg-[#0f9ba8] hover:bg-[#0d8a96]">
            <a href="#" target="_blank" rel="noreferrer" aria-label="Open LinkedIn profile">
              <Linkedin className="mr-2 h-4 w-4" />
              {"LinkedIn"}
            </a>
          </Button>
          <Button variant="outline" asChild className="border-[#0f9ba8]/30 bg-white text-slate-900 hover:bg-slate-50">
            <a href="#" target="_blank" rel="noreferrer" aria-label="Open GitHub profile">
              <Github className="mr-2 h-4 w-4" />
              {"GitHub"}
            </a>
          </Button>
          <Button variant="ghost" asChild className="text-slate-700 hover:bg-slate-100">
            <a href="mailto:mdhuzefabbasi@gmail.com" aria-label="Email me">
              <Mail className="mr-2 h-4 w-4" />
              {"Email"}
            </a>
          </Button>
        </div>

        {/* REPLACED: stat cards -> animated marquee */}
        <div className="mt-6 w-full">
          <Marquee />
        </div>

        <div className="mt-8">
          <a href="#projects" className="group inline-flex items-center text-[#0f9ba8] hover:text-[#0d8a96]">
            {"See featured projects"}
            <ArrowRight className="ml-2 h-4 w-4 transition-transform group-hover:translate-x-1" />
          </a>
        </div>
      </div>
    </div>
  );
}

// components/sections/experience.tsx
import { motion } from "framer-motion";
import { useRef } from "react";
import { Timeline } from "@/components/ui/timeline";

export function Experience() {
  const ref = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({ target: ref, offset: ["start end", "end start"] });
  const y = useTransform(scrollYProgress, [0, 1], [0, -40]);
  const opacity = useTransform(scrollYProgress, [0, 1], [1, 0.9]);

  return (
    <div ref={ref} className="relative">
      {/* Parallax decorative orb retinted */}
      <motion.div
        aria-hidden="true"
        className="absolute -left-12 top-[-60px] h-40 w-40 rounded-full bg-[#2e8b57]/35 blur-2xl md:h-56 md:w-56"
        style={{ y, opacity }}
      />
      <div className="mx-auto flex max-w-6xl flex-col items-start gap-6 px-4 py-16 md:px-6 md:py-28">
        <motion.h2
          className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl"
          initial={{ opacity: 0, y: 12 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          {"Experience"}
        </motion.h2>

        <Timeline>
          {/* Timeline rail */}
          <div className="absolute left-4 top-0 h-full w-px bg-gradient-to-b from-[#0f9ba8] to-[#2e8b57]" />

          {/* Timeline markers */}
          <div className="absolute left-0 top-2 h-3 w-3 -translate-x-1.5 rounded-full border-2 border-white bg-[#0f9ba8] shadow" />
          <div className="absolute left-0 top-24 h-3 w-3 -translate-x-1.5 rounded-full border-2 border-white bg-[#0f9ba8] shadow" />
          <div className="absolute left-0 top-48 h-3 w-3 -translate-x-1.5 rounded-full border-2 border-white bg-[#0f9ba8] shadow" />

          {/* Timeline items */}
          <div className="mt-6 w-full">
            <div className="flex items-center gap-4">
              <div className="h-10 w-10 rounded-full bg-[#0f9ba8] shadow" />
              <div>
                <h3 className="text-xl font-bold">{"Job Title 1"}</h3>
                <p className="text-sm text-slate-600">{"Company 1 • Duration"}</p>
                <div className="mt-2 flex flex-wrap gap-2">
                  <span className="rounded-md bg-[#2e8b57]/10 px-2 py-1 text-xs text-[#2e8b57] ring-1 ring-[#2e8b57]/20">{"Tag 1"}</span>
                  <span className="rounded-md bg-[#2e8b57]/10 px-2 py-1 text-xs text-[#2e8b57] ring-1 ring-[#2e8b57]/20">{"Tag 2"}</span>
                </div>
              </div>
            </div>
            <div className="mt-6 flex items-center gap-4">
              <div className="h-10 w-10 rounded-full bg-[#0f9ba8] shadow" />
              <div>
                <h3 className="text-xl font-bold">{"Job Title 2"}</h3>
                <p className="text-sm text-slate-600">{"Company 2 • Duration"}</p>
                <div className="mt-2 flex flex-wrap gap-2">
                  <span className="rounded-md bg-[#2e8b57]/10 px-2 py-1 text-xs text-[#2e8b57] ring-1 ring-[#2e8b57]/20">{"Tag 3"}</span>
                  <span className="rounded-md bg-[#2e8b57]/10 px-2 py-1 text-xs text-[#2e8b57] ring-1 ring-[#2e8b57]/20">{"Tag 4"}</span>
                </div>
              </div>
            </div>
            <div className="mt-6 flex items-center gap-4">
              <div className="h-10 w-10 rounded-full bg-[#0f9ba8] shadow" />
              <div>
                <h3 className="text-xl font-bold">{"Job Title 3"}</h3>
                <p className="text-sm text-slate-600">{"Company 3 • Duration"}</p>
                <div className="mt-2 flex flex-wrap gap-2">
                  <span className="rounded-md bg-[#2e8b57]/10 px-2 py-1 text-xs text-[#2e8b57] ring-1 ring-[#2e8b57]/20">{"Tag 5"}</span>
                  <span className="rounded-md bg-[#2e8b57]/10 px-2 py-1 text-xs text-[#2e8b57] ring-1 ring-[#2e8b57]/20">{"Tag 6"}</span>
                </div>
              </div>
            </div>
          </div>
        </Timeline>
      </div>
    </div>
  );
}

// components/sections/projects.tsx
import { motion } from "framer-motion";
import { useRef } from "react";
import { ProjectCard } from "@/components/ui/project-card";

export function Projects() {
  const ref = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({ target: ref, offset: ["start end", "end start"] });
  const y = useTransform(scrollYProgress, [0, 1], [0, -40]);
  const opacity = useTransform(scrollYProgress, [0, 1], [1, 0.9]);

  return (
    <div ref={ref} className="relative">
      {/* Parallax decorative orb retinted */}
      <motion.div
        aria-hidden="true"
        className="absolute -left-12 top-[-60px] h-40 w-40 rounded-full bg-[#2e8b57]/35 blur-2xl md:h-56 md:w-56"
        style={{ y, opacity }}
      />
      <div className="mx-auto flex max-w-6xl flex-col items-start gap-6 px-4 py-16 md:px-6 md:py-28">
        <motion.h2
          className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl"
          initial={{ opacity: 0, y: 12 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          {"Projects"}
        </motion.h2>

        <div className="mt-6 grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3">
          <ProjectCard
            title="Project 1"
            description="Description of Project 1"
            tags={["Tag 1", "Tag 2"]}
            className="overflow-hidden rounded-xl border border-slate-200 bg-white shadow-sm transition hover:border-[#0f9ba8]/40"
          />
          <ProjectCard
            title="Project 2"
            description="Description of Project 2"
            tags={["Tag 3", "Tag 4"]}
            className="overflow-hidden rounded-xl border border-slate-200 bg-white shadow-sm transition hover:border-[#0f9ba8]/40"
          />
          <ProjectCard
            title="Project 3"
            description="Description of Project 3"
            tags={["Tag 5", "Tag 6"]}
            className="overflow-hidden rounded-xl border border-slate-200 bg-white shadow-sm transition hover:border-[#0f9ba8]/40"
          />
        </div>
      </div>
    </div>
  );
}

// components/sections/skills.tsx
import { motion } from "framer-motion";
import { useRef } from "react";
import { SkillBar } from "@/components/ui/skill-bar";

export function Skills() {
  const ref = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({ target: ref, offset: ["start end", "end start"] });
  const y = useTransform(scrollYProgress, [0, 1], [0, -40]);
  const opacity = useTransform(scrollYProgress, [0, 1], [1, 0.9]);

  const skills = [
    { name: "Skill 1", level: 80 },
    { name: "Skill 2", level: 90 },
    { name: "Skill 3", level: 70 },
  ];

  return (
    <div ref={ref} className="relative">
      {/* Parallax decorative orb retinted */}
      <motion.div
        aria-hidden="true"
        className="absolute -left-12 top-[-60px] h-40 w-40 rounded-full bg-[#2e8b57]/35 blur-2xl md:h-56 md:w-56"
        style={{ y, opacity }}
      />
      <div className="mx-auto flex max-w-6xl flex-col items-start gap-6 px-4 py-16 md:px-6 md:py-28">
        <motion.h2
          className="text-3xl font-bold tracking-tight sm:text-4xl md:text-5xl"
          initial={{ opacity: 0, y: 12 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
        >
          {"Skills"}
        </motion.h2>

        <div className="mt-6 grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3">
          {skills.map((s) => (
            <SkillBar key={s.name} name={s.name}>
              <motion.div
                initial={{ width: 0 }}
                whileInView={{ width: `${s.level}%` }}
                viewport={{ once: false, amount: 0.4 }}
                transition={{ duration: 0.8, ease: "easeOut" }}
                className="h-full rounded-full bg-gradient-to-r from-[#0f9ba8] to-[#2e8b57]"
              />
            </SkillBar>
          ))}
        </div>
      </div>
    </div>
  );
}
